name: "Update Changelog"

on:
    release:
        types: [published]
    pull_request:
        branches:
            - main
    workflow_dispatch:

permissions:
    contents: write
    pull-requests: write

jobs:
    update-changelog:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v4
              with:
                  fetch-depth: 0
                  ref: main

            - name: Setup git-chglog
              run: |
                  sudo snap install go --classic;
                  go install github.com/git-chglog/git-chglog/cmd/git-chglog@latest;

            - name: Generate CHANGELOG.md
              id: generate
              run: |
                  rm -f CHANGELOG.md
                  ./git-chglog -o CHANGELOG.md
                  if git diff --quiet CHANGELOG.md; then
                      echo "changes=false" >> $GITHUB_OUTPUT
                  else
                      echo "changes=true" >> $GITHUB_OUTPUT
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

            - name: Cleanup
              run: rm git-chglog
              if: always()

            - name: Create Pull Request
              if: steps.generate.outputs.changes == 'true'
              uses: peter-evans/create-pull-request@v4
              with:
                  token: ${{ secrets.GITHUB_TOKEN }}
                  commit-message: "chore: update CHANGELOG.md"
                  title: "üìù Update Changelog"
                  body: |
                      This PR updates the CHANGELOG.md to include all releases.
                      - Generated using git-chglog
                      - Triggered by: ${{ github.event_name }}
                      - Auto-merge enabled
                  branch: update-changelog-${{ github.run_id }}
                  base: main
                  delete-branch: true
                  labels: documentation, automated-pr

            - name: Enable Auto-merge
              if: steps.generate.outputs.changes == 'true'
              run: |
                  gh pr merge --auto --merge "${{ steps.create-pr.outputs.pull-request-number }}"
              env:
                  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
