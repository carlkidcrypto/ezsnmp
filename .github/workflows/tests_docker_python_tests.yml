name: Run Dockerized Python Tests

concurrency: tests-docker

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  check-changes:
    runs-on: ubuntu-latest
    outputs:
      any_changed: ${{ steps.changed-files.outputs.any_changed }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Check for changes in source code
        id: changed-files
        uses: tj-actions/changed-files@v47.0.0
        with:
          files: |
            .github/workflows/tests_docker.yml
            **/*.py
            **/*.cpp
            **/*.h
            python_tests/*.conf
            setup.py
            setup.cfg
            tox.ini
            python_tests/requirements.txt

  test-distributions:
    needs: check-changes
    if: needs.check-changes.outputs.any_changed == 'true'
    runs-on: ubuntu-latest
    strategy:
      matrix:

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Set up Docker Compose
        run: |
          if ! command -v docker-compose &> /dev/null; then
            echo "docker-compose not found, installing..."
            sudo apt-get update
            sudo apt-get install -y docker-compose
          else
            echo "docker-compose is already installed."
          fi
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-docker-tests-${{ hashFiles(format('docker/{0}/Dockerfile', 'docker-tests')) }}
          restore-keys: |
            ${{ runner.os }}-buildx-docker-tests-
  
      - name: Run unit tests inside the Docker container
        run: |
          sh docker/run_python_tests_in_all_dockers.sh

      - name: Upload Test Results (${{ matrix.distribution }})
        uses: actions/upload-artifact@v4
        with:
          name: pytest-results_${{ matrix.distribution }}
          path: |
            test-results_${{ matrix.distribution }}*.xml
            test-outputs_${{ matrix.distribution }}*.txt

      - name: Bring down Docker containers (${{ matrix.distribution }})
        run: docker-compose -f ./docker/${{ matrix.distribution }}/docker-compose.yml down

  comment-pytest-coverage-report:
    runs-on: ubuntu-latest
    needs: test-distributions
    permissions:
      pull-requests: write # This is needed to create/update comments
    if: always() 
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v5
        with:
          pattern: pytest-results_*
          merge-multiple: true 
      
      - name: List files
        run: ls -Rlah

      - name: Pytest coverage comment (Dockerized Tests)
        uses: MishaKav/pytest-coverage-comment@v1.1.57
        with:
          title: Pytest Coverage Report - Dockerized Tests
          unique-id-for-comment: dockerized-tests
          hide-badge: true
          hide-report: true
          create-new-comment: false
          hide-comment: false
          report-only-changed-files: false
          multiple-files: |
            almalinux10, test-outputs_almalinux10.txt, test-results_almalinux10.xml
            archlinux, test-outputs_archlinux.txt, test-results_archlinux.xml
            rockylinux8_py39, test-outputs_rockylinux8_py39.txt, test-results_rockylinux8_py39.xml
            rockylinux8_py311, test-outputs_rockylinux8_py311.txt, test-results_rockylinux8_py311.xml
            rockylinux8_py312, test-outputs_rockylinux8_py312.txt, test-results_rockylinux8_py312.xml