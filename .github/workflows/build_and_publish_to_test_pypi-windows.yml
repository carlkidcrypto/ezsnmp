# Refer to the following link for help
# https://packaging.python.org/en/latest/guides/publishing-package-distribution-releases-using-github-actions-ci-cd-workflows/

name: TestPyPI Distributions - Windows
concurrency: build_and_publish_to_test_pypi
on:
  push:
    branches: [main, feature/windows_builds_experimental]

jobs:
  check-source-changes:
    runs-on: ubuntu-latest
    outputs:
      run_job: ${{ steps.changed-files.outputs.any_changed }}
    steps:
      - name: Checkout Sourcecode
        uses: actions/checkout@v4

      - name: Check for changes in setup.py/cfg
        id: changed-files
        uses: tj-actions/changed-files@v44.5.2
        with:
          files: |
            setup.py
            setup.cfg

  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    needs: check-source-changes
    # if: needs.check-source-changes.outputs.run_job == 'true'
    strategy:
      matrix:
        os: [windows-latest]

    steps:
      - name: Checkout the source code
        uses: actions/checkout@v4

      - name: Download net-snmp-5-9-patches from Github
        uses: carlkidcrypto/os-specific-runner@v2.1.0
        with:
          windows: curl -o net-snmp-5-9-patches.zip https://codeload.github.com/net-snmp/net-snmp/zip/refs/heads/V5-9-patches;

      - name: Unzip downloaded net-snmp zip folder
        uses: carlkidcrypto/os-specific-runner@v2.1.0
        with:
          windows: Expand-Archive net-snmp-5-9-patches.zip D:\a\ezsnmp\ezsnmp\.;

      - name: Install Windows OpenSSL
        uses: crazy-max/ghaction-chocolatey@v3
        with:
          args: install openssl
   
      - name: Move Installed OpenSSL Files
        uses: carlkidcrypto/os-specific-runner@v2.1.0
        with:
          windows: |
                   $source = "C:\Program Files\OpenSSL\";
                   $destination = "D:\a\ezsnmp\ezsnmp\OpenSSL-Win64\";

                   # Create the destination folder if it doesn't exist
                   if (-not (Test-Path $destination)) { New-Item -Type Directory -Path $destination | Out-Null};
                   Get-ChildItem -Path "*OpenSSL*";

                   # Copy files from source to destination
                   Copy-Item -Path $source\* -Destination $destination -Recurse -Force;


      - name: Install Perl
        uses: shogo82148/actions-setup-perl@v1
        with:
          perl-version: "5.38"
        
      - name: Configure build for win64
        uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: win64
          vsversion: 2022

      - name: Build net-snmp 64x for Windows
        working-directory: D:\a\ezsnmp\ezsnmp
        shell: cmd
        run: |
              cd net-snmp-5-9-patches\win32
              call "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Auxiliary\Build\vcvarsall.bat" x64
              cd
              set Platform=x64
              set TARGET_CPU=x64
              perl Configure --with-ssl --enable-blumenthal-aes --with-sslincdir="D:\a\ezsnmp\ezsnmp\OpenSSL-Win64\include" --with-ssllibdir="D:\a\ezsnmp\ezsnmp\OpenSSL-Win64\lib\VC\x64\MT" --with-sdk --with-ipv6 --with-winextdll --config=release --linktype=static --prefix="d:/a/ezsnmp/ezsnmp/usr_64x"
              nmake
              nmake install
              nmake install_devel

  #     - uses: actions/upload-artifact@v4
  #       with:
  #         name: cibw-wheels-${{ matrix.os }}-${{ strategy.job-index }}
  #         path: wheelhouse/*.whl

  # build-n-publish-test-pypi:
  #   name: Build and Publish To Test PyPi
  #   runs-on: ubuntu-latest
  #   needs: build_wheels

  #   steps:
  #     - uses: actions/checkout@v4
  #     - name: Set up Python 3.10
  #       uses: actions/setup-python@v5
  #       with:
  #         python-version: "3.10"
      
  #     - name: Set up dependencies
  #       uses: carlkidcrypto/os-specific-runner@v2.1.0
  #       with:
  #         linux: sudo apt-get update;
  #                sudo apt-get install -y libsnmp-dev libperl-dev;

  #     - name: Install pypa/build
  #       run: >-
  #         python -m
  #         pip install
  #         build
  #         --user

  #     - name: Build a source tarball
  #       run: >-
  #         python -m
  #         build
  #         --sdist
  #         --outdir dist/
  #         .

  #     - name: Download Wheels
  #       uses: actions/download-artifact@v4
  #       with:
  #         pattern: cibw-wheels-*
  #         merge-multiple: true
  #         path: dist/

  #     - name: Publish distribution ðŸ“¦ to Test PyPI
  #       uses: pypa/gh-action-pypi-publish@release/v1.6
  #       with:
  #         skip_existing: true
  #         print_hash: true
  #         password: ${{ secrets.TEST_PYPI_API_TOKEN }}
  #         repository_url: https://test.pypi.org/legacy/
