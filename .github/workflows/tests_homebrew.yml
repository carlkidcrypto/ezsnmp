name: Tests With Homebrew Package Manager
concurrency: tests
on:
  push:
    branches: [ 355-bug-string-values-returned-enclosed-in ]

  pull_request:
    branches: [ main ]

jobs:
  check-source-changes:
    runs-on: ubuntu-latest
    outputs:
      run_job: ${{ steps.changed-files.outputs.any_changed }}
    steps:
      - name: Checkout Sourcecode
        uses: actions/checkout@v4

      - name: Check for changes in source code
        id: changed-files
        uses: tj-actions/changed-files@v46.0.5
        with:
          files: |
            ezsnmp/*.py
            ezsnmp/*.cpp
            ezsnmp/*.h
            python_tests/*.py
            python_tests/*.conf
            setup.py
            setup.cfg

  build-and-test:
    runs-on: ${{ matrix.os }}
    needs: check-source-changes
    if: needs.check-source-changes.outputs.run_job == 'true'
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]
        python-version: ["3.9", "3.10", "3.11", "3.12", "3.13"]
        net-snmp-version: ["5.7", "5.8", "5.9"]
  
    steps:
      - name: Set up Homebrew
        id: set-up-homebrew
        uses: Homebrew/actions/setup-homebrew@master

      - name: Set up dependencies
        uses: carlkidcrypto/os-specific-runner@v2.1.2
        with:
          linux: sudo apt-get update;
                 sudo apt-get install -y snmpd snmp-mibs-downloader valgrind;
                 sudo apt-get purge libsnmp-dev libperl-dev -y;
                 brew update;
                 brew install net-snmp@${{ matrix.net-snmp-version }};
                 brew install openssl@3;
                 sudo systemctl stop snmpd;
                 sudo download-mibs;
                 mkdir -p -m 0755 ~/.snmp;
                 echo 'mibs +ALL' > ~/.snmp/snmp.conf;
          
          macos: brew update;
                 brew install net-snmp@${{ matrix.net-snmp-version }};
                 brew install openssl@3;
                 echo 'export PATH="/usr/local/opt/net-snmp/bin:$PATH"' >> ~/.zshrc;
                 export PATH="/usr/local/opt/net-snmp/bin:$PATH";
                 echo 'export PATH="/usr/local/opt/net-snmp/sbin:$PATH"' >> ~/.zshrc;
                 export PATH="/usr/local/opt/net-snmp/sbin:$PATH";
                 mkdir -p -m 0755 ~/.snmp;
                 echo 'mibs +ALL' > ~/.snmp/snmp.conf;

      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          allow-prereleases: true
          python-version: ${{ matrix.python-version }}

      - name: Install pip dependencies
        run: |
          if [ -f python_tests/requirements.txt ]; then pip install -r python_tests/requirements.txt; fi

      - name: Build And Install EzSnmp
        run: |
          pip install . --verbose
      
      - name: Start SNMP daemon
        run: |
          if [ "$RUNNER_OS" == "Linux" ]
          then
            mibdir="-M +/var/lib/snmp/mibs"
            SNMPD=$(which snmpd)
          elif [ "$RUNNER_OS" == "macOS" ]
          then
            mibdir=""
            SNMPD=$(which snmpd)
          else
            mibdir=""
            SNMPD=$(which.exe snmpd)
          fi
          $SNMPD -C -c python_tests/snmpd.conf -r -Le $mibdir -m ALL

      - name: Run Tests
        uses: carlkidcrypto/os-specific-runner@v2.1.2
        with:
          linux: wget https://raw.githubusercontent.com/python/cpython/main/Misc/valgrind-python.supp;
                 VALGRIND=(
                   'valgrind'
                   '--tool=memcheck'
                   '--leak-check=full'
                   '--show-leak-kinds=definite,indirect,possible'
                   '--suppressions=./valgrind-python.supp'
                   '--log-file=./valgrind_${{ matrix.os }}_${{ matrix.python-version }}_${{ matrix.net-snmp-version }}.out'
                 );
                 echo 'PYTHONMALLOC=malloc' >> $GITHUB_OUTPUT;
                 LD_LIBRARY_PATH=/home/linuxbrew/.linuxbrew/Cellar/net-snmp/${{ matrix.net-snmp-version }}/lib:$LD_LIBRARY_PATH ${VALGRIND[@]} pytest -s python_tests/ --junitxml=test-results_${{ matrix.os }}_${{ matrix.python-version }}_${{ matrix.net-snmp-version }}.xml | tee ./test-outputs_${{ matrix.os }}_${{ matrix.python-version }}_${{ matrix.net-snmp-version }}.txt;
          
          macos: pytest -s python_tests/ --junitxml=test-results_${{ matrix.os }}_${{ matrix.python-version }}_${{ matrix.net-snmp-version }}.xml | tee ./test-outputs_${{ matrix.os }}_${{ matrix.python-version }}_${{ matrix.net-snmp-version }}.txt;

      - name: Upload Test Results
        uses: actions/upload-artifact@v4
        with:
          name: pytest-results_${{matrix.os}}_${{matrix.python-version}}_${{matrix.net-snmp-version}}
          path: |
            test-results_${{ matrix.os }}_${{ matrix.python-version }}_${{ matrix.net-snmp-version }}.xml
            test-outputs_${{ matrix.os }}_${{ matrix.python-version }}_${{ matrix.net-snmp-version }}.txt

      - name: Upload Valgrind Reports
        uses: actions/upload-artifact@v4
        if: ${{ matrix.os == 'ubuntu-latest' }}
        with:
          name: valgrind-report_${{matrix.os}}_${{matrix.python-version}}_${{matrix.net-snmp-version}}
          path: ./valgrind_${{ matrix.os }}_${{ matrix.python-version }}_${{ matrix.net-snmp-version }}.out

  comment-pytest-coverage-report:
    runs-on: ubuntu-latest
    needs: build-and-test
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: pytest-results_*
          merge-multiple: false

      - name: Pytest coverage comment
        uses: MishaKav/pytest-coverage-comment@v1.1.53
        with:
          title: Pytest Coverage Report
          hide-badge: true
          hide-report: true
          create-new-comment: false
          hide-comment: false
          report-only-changed-files: false
          multiple-files: |
            macos-latest - 3.9 - 5.7, pytest-results_macos-latest_3.9_5.7/test-outputs_macos-latest_3.9_5.7.txt, pytest-results_macos-latest_3.9_5.7/test-results_macos-latest_3.9_5.7.xml
            macos-latest - 3.9 - 5.8, pytest-results_macos-latest_3.9_5.8/test-outputs_macos-latest_3.9_5.8.txt, pytest-results_macos-latest_3.9_5.8/test-results_macos-latest_3.9_5.8.xml
            macos-latest - 3.9 - 5.9, pytest-results_macos-latest_3.9_5.9/test-outputs_macos-latest_3.9_5.9.txt, pytest-results_macos-latest_3.9_5.9/test-results_macos-latest_3.9_5.9.xml
            macos-latest - 3.10 - 5.7, pytest-results_macos-latest_3.10_5.7/test-outputs_macos-latest_3.10_5.7.txt, pytest-results_macos-latest_3.10_5.7/test-results_macos-latest_3.10_5.7.xml
            macos-latest - 3.10 - 5.8, pytest-results_macos-latest_3.10_5.8/test-outputs_macos-latest_3.10_5.8.txt, pytest-results_macos-latest_3.10_5.8/test-results_macos-latest_3.10_5.8.xml
            macos-latest - 3.10 - 5.9, pytest-results_macos-latest_3.10_5.9/test-outputs_macos-latest_3.10_5.9.txt, pytest-results_macos-latest_3.10_5.9/test-results_macos-latest_3.10_5.9.xml
            macos-latest - 3.11 - 5.7, pytest-results_macos-latest_3.11_5.7/test-outputs_macos-latest_3.11_5.7.txt, pytest-results_macos-latest_3.11_5.7/test-results_macos-latest_3.11_5.7.xml
            macos-latest - 3.11 - 5.8, pytest-results_macos-latest_3.11_5.8/test-outputs_macos-latest_3.11_5.8.txt, pytest-results_macos-latest_3.11_5.8/test-results_macos-latest_3.11_5.8.xml
            macos-latest - 3.11 - 5.9, pytest-results_macos-latest_3.11_5.9/test-outputs_macos-latest_3.11_5.9.txt, pytest-results_macos-latest_3.11_5.9/test-results_macos-latest_3.11_5.9.xml
            macos-latest - 3.12 - 5.7, pytest-results_macos-latest_3.12_5.7/test-outputs_macos-latest_3.12_5.7.txt, pytest-results_macos-latest_3.12_5.7/test-results_macos-latest_3.12_5.7.xml
            macos-latest - 3.12 - 5.8, pytest-results_macos-latest_3.12_5.8/test-outputs_macos-latest_3.12_5.8.txt, pytest-results_macos-latest_3.12_5.8/test-results_macos-latest_3.12_5.8.xml
            macos-latest - 3.12 - 5.9, pytest-results_macos-latest_3.12_5.9/test-outputs_macos-latest_3.12_5.9.txt, pytest-results_macos-latest_3.12_5.9/test-results_macos-latest_3.12_5.9.xml
            macos-latest - 3.13 - 5.7, pytest-results_macos-latest_3.13_5.7/test-outputs_macos-latest_3.13_5.7.txt, pytest-results_macos-latest_3.13_5.7/test-results_macos-latest_3.13_5.7.xml
            macos-latest - 3.13 - 5.8, pytest-results_macos-latest_3.13_5.8/test-outputs_macos-latest_3.13_5.8.txt, pytest-results_macos-latest_3.13_5.8/test-results_macos-latest_3.13_5.8.xml
            macos-latest - 3.13 - 5.9, pytest-results_macos-latest_3.13_5.9/test-outputs_macos-latest_3.13_5.9.txt, pytest-results_macos-latest_3.13_5.9/test-results_macos-latest_3.13_5.9.xml
            ubuntu-latest - 3.9 - 5.7, pytest-results_ubuntu-latest_3.9_5.7/test-outputs_ubuntu-latest_3.9_5.7.txt, pytest-results_ubuntu-latest_3.9_5.7/test-results_ubuntu-latest_3.9_5.7.xml
            ubuntu-latest - 3.9 - 5.8, pytest-results_ubuntu-latest_3.9_5.8/test-outputs_ubuntu-latest_3.9_5.8.txt, pytest-results_ubuntu-latest_3.9_5.8/test-results_ubuntu-latest_3.9_5.8.xml
            ubuntu-latest - 3.9 - 5.9, pytest-results_ubuntu-latest_3.9_5.9/test-outputs_ubuntu-latest_3.9_5.9.txt, pytest-results_ubuntu-latest_3.9_5.9/test-results_ubuntu-latest_3.9_5.9.xml
            ubuntu-latest - 3.10 - 5.7, pytest-results_ubuntu-latest_3.10_5.7/test-outputs_ubuntu-latest_3.10_5.7.txt, pytest-results_ubuntu-latest_3.10_5.7/test-results_ubuntu-latest_3.10_5.7.xml
            ubuntu-latest - 3.10 - 5.8, pytest-results_ubuntu-latest_3.10_5.8/test-outputs_ubuntu-latest_3.10_5.8.txt, pytest-results_ubuntu-latest_3.10_5.8/test-results_ubuntu-latest_3.10_5.8.xml
            ubuntu-latest - 3.10 - 5.9, pytest-results_ubuntu-latest_3.10_5.9/test-outputs_ubuntu-latest_3.10_5.9.txt, pytest-results_ubuntu-latest_3.10_5.9/test-results_ubuntu-latest_3.10_5.9.xml
            ubuntu-latest - 3.11 - 5.7, pytest-results_ubuntu-latest_3.11_5.7/test-outputs_ubuntu-latest_3.11_5.7.txt, pytest-results_ubuntu-latest_3.11_5.7/test-results_ubuntu-latest_3.11_5.7.xml
            ubuntu-latest - 3.11 - 5.8, pytest-results_ubuntu-latest_3.11_5.8/test-outputs_ubuntu-latest_3.11_5.8.txt, pytest-results_ubuntu-latest_3.11_5.8/test-results_ubuntu-latest_3.11_5.8.xml
            ubuntu-latest - 3.11 - 5.9, pytest-results_ubuntu-latest_3.11_5.9/test-outputs_ubuntu-latest_3.11_5.9.txt, pytest-results_ubuntu-latest_3.11_5.9/test-results_ubuntu-latest_3.11_5.9.xml
            ubuntu-latest - 3.12 - 5.7, pytest-results_ubuntu-latest_3.12_5.7/test-outputs_ubuntu-latest_3.12_5.7.txt, pytest-results_ubuntu-latest_3.12_5.7/test-results_ubuntu-latest_3.12_5.7.xml
            ubuntu-latest - 3.12 - 5.8, pytest-results_ubuntu-latest_3.12_5.8/test-outputs_ubuntu-latest_3.12_5.8.txt, pytest-results_ubuntu-latest_3.12_5.8/test-results_ubuntu-latest_3.12_5.8.xml
            ubuntu-latest - 3.12 - 5.9, pytest-results_ubuntu-latest_3.12_5.9/test-outputs_ubuntu-latest_3.12_5.9.txt, pytest-results_ubuntu-latest_3.12_5.9/test-results_ubuntu-latest_3.12_5.9.xml
            ubuntu-latest - 3.13 - 5.7, pytest-results_ubuntu-latest_3.13_5.7/test-outputs_ubuntu-latest_3.13_5.7.txt, pytest-results_ubuntu-latest_3.13_5.7/test-results_ubuntu-latest_3.13_5.7.xml
            ubuntu-latest - 3.13 - 5.8, pytest-results_ubuntu-latest_3.13_5.8/test-outputs_ubuntu-latest_3.13_5.8.txt, pytest-results_ubuntu-latest_3.13_5.8/test-results_ubuntu-latest_3.13_5.8.xml
            ubuntu-latest - 3.13 - 5.9, pytest-results_ubuntu-latest_3.13_5.9/test-outputs_ubuntu-latest_3.13_5.9.txt, pytest-results_ubuntu-latest_3.13_5.9/test-results_ubuntu-latest_3.13_5.9.xml

  make-stripped-valgrind-files:
    runs-on: ${{ matrix.os }}
    needs: build-and-test
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        python-version: ["3.9", "3.10", "3.11", "3.12", "3.13"]
        net-snmp-version: ["5.7", "5.8", "5.9"]

    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: valgrind-report_*
          merge-multiple: false

      - name: Parse Valgrind Reports
        run: |
          python - << "EOF"
          with open("./valgrind-report_${{matrix.os}}_${{matrix.python-version}}_${{matrix.net-snmp-version}}/valgrind_${{ matrix.os }}_${{ matrix.python-version }}_${{ matrix.net-snmp-version }}.out") as f:
              data = f.readlines()
          last_five_lines = data[-5:]
          with open('./valgrind-stripped_${{ matrix.os }}_${{ matrix.python-version }}_${{ matrix.net-snmp-version }}.log', 'w') as f:
              f.write('```sh\n')
              f.writelines(last_five_lines)
              f.write('```\n')
          EOF

      - name: Upload Stripped Valgrind Reports
        uses: actions/upload-artifact@v4
        with:
          name: valgrind-stripped_${{matrix.os}}_${{matrix.python-version}}_${{matrix.net-snmp-version}}
          path: |
            valgrind-stripped_${{ matrix.os }}_${{ matrix.python-version }}_${{ matrix.net-snmp-version }}.log

  comment-valgrind:
    runs-on: ubuntu-latest
    needs: make-stripped-valgrind-files
  
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: valgrind-stripped_*
          merge-multiple: false

      - name: Set Env Variables
        id: valgrind_stripped_vars
        run: |
          for python_version in 3.9 3.10 3.11 3.12 3.13; do
            for net_snmp_version in 5.7 5.8 5.9; do
              temp=$(cat valgrind-stripped_ubuntu-latest_${python_version}_${net_snmp_version}/valgrind-stripped_ubuntu-latest_${python_version}_${net_snmp_version}.log);
              echo VALGRIND_STRIPPED_UBUNTU_LATEST_${python_version//./_}_${net_snmp_version//./_}=$temp >> $GITHUB_OUTPUT;
            done
          done

      - name: Checkout Sourcecode
        uses: actions/checkout@v4

      - name: Render Valgrind Comment Template
        id: template
        uses: chuhlomin/render-template@v1.10
        with:
          template: .github/comment-valgrind-template.md
          vars: |
            py3_9_5_7:  "${{ steps.valgrind_stripped_vars.outputs.VALGRIND_STRIPPED_UBUNTU_LATEST_3_9_5_7 }}"
            py3_9_5_8:  "${{ steps.valgrind_stripped_vars.outputs.VALGRIND_STRIPPED_UBUNTU_LATEST_3_9_5_8 }}"
            py3_9_5_9:  "${{ steps.valgrind_stripped_vars.outputs.VALGRIND_STRIPPED_UBUNTU_LATEST_3_9_5_9 }}"
            py3_10_5_7: "${{ steps.valgrind_stripped_vars.outputs.VALGRIND_STRIPPED_UBUNTU_LATEST_3_10_5_7 }}"
            py3_10_5_8: "${{ steps.valgrind_stripped_vars.outputs.VALGRIND_STRIPPED_UBUNTU_LATEST_3_10_5_8 }}"
            py3_10_5_9: "${{ steps.valgrind_stripped_vars.outputs.VALGRIND_STRIPPED_UBUNTU_LATEST_3_10_5_9 }}"
            py3_11_5_7: "${{ steps.valgrind_stripped_vars.outputs.VALGRIND_STRIPPED_UBUNTU_LATEST_3_11_5_7 }}"
            py3_11_5_8: "${{ steps.valgrind_stripped_vars.outputs.VALGRIND_STRIPPED_UBUNTU_LATEST_3_11_5_8 }}"
            py3_11_5_9: "${{ steps.valgrind_stripped_vars.outputs.VALGRIND_STRIPPED_UBUNTU_LATEST_3_11_5_9 }}"
            py3_12_5_7: "${{ steps.valgrind_stripped_vars.outputs.VALGRIND_STRIPPED_UBUNTU_LATEST_3_12_5_7 }}"
            py3_12_5_8: "${{ steps.valgrind_stripped_vars.outputs.VALGRIND_STRIPPED_UBUNTU_LATEST_3_12_5_8 }}"
            py3_12_5_9: "${{ steps.valgrind_stripped_vars.outputs.VALGRIND_STRIPPED_UBUNTU_LATEST_3_12_5_9 }}"
            py3_13_5_7: "${{ steps.valgrind_stripped_vars.outputs.VALGRIND_STRIPPED_UBUNTU_LATEST_3_13_5_7 }}"
            py3_13_5_8: "${{ steps.valgrind_stripped_vars.outputs.VALGRIND_STRIPPED_UBUNTU_LATEST_3_13_5_8 }}"
            py3_13_5_9: "${{ steps.valgrind_stripped_vars.outputs.VALGRIND_STRIPPED_UBUNTU_LATEST_3_13_5_9 }}"

      - name: Create A Comment For PR
        uses: peter-evans/create-or-update-comment@v4
        if: github.event_name == 'pull_request'
        with:
          issue-number: ${{ github.event.pull_request.number }}
          body: ${{ steps.template.outputs.result }}

      - name: Create A Comment For Push
        uses: peter-evans/commit-comment@v3
        if: github.event_name == 'push'
        with:
          body: ${{ steps.template.outputs.result }}
