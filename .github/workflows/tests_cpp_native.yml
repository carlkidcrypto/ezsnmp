# This workflow builds and runs the C++ tests using Meson and Ninja
# on multiple operating systems.
# It checks for changes in the C++ source code and runs tests only if there are changes.
name: C++ Tests
concurrency: cpp-tests
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  check-source-changes:
    runs-on: ubuntu-latest
    outputs:
      run_job: ${{ steps.changed-files.outputs.any_changed }}
    steps:
      - name: Checkout Sourcecode
        uses: actions/checkout@v5

      - name: Check for changes in C++ source or test files
        id: changed-files
        uses: tj-actions/changed-files@v46.0.5
        with:
          files: |
            ezsnmp/*.cpp
            ezsnmp/*.h
            cpp_tests/**
            **/meson.build
            **/meson_options.txt

  build-and-test:
    name: Build and Run C++ Tests on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    needs: check-source-changes
    if: needs.check-source-changes.outputs.run_job == 'true'
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]

    steps:
      - name: Set up dependencies
        uses: carlkidcrypto/os-specific-runner@v2.1.2
        with:
          linux: sudo apt-get update;
                 sudo apt-get install -y snmpd libsnmp-dev libperl-dev snmp-mibs-downloader meson ninja-build libgtest-dev;
                 sudo systemctl stop snmpd;
                 sudo download-mibs;
                 mkdir -p -m 0755 ~/.snmp;
                 echo 'mibs +ALL' > ~/.snmp/snmp.conf;
          macos: brew install meson ninja net-snmp googletest;
                 mkdir -p -m 0755 ~/.snmp;
                 echo 'mibs +ALL' > ~/.snmp/snmp.conf;

      - name: Checkout repo
        uses: actions/checkout@v5

      - name: Start SNMP daemon
        run: |
          if [ "$RUNNER_OS" == "Linux" ]
          then
            mibdir="-M +/var/lib/snmp/mibs"
            SNMPD=$(which snmpd)
          elif [ "$RUNNER_OS" == "macOS" ]
          then
            mibdir=""
            SNMPD=$(which snmpd)
          else
            mibdir=""
            SNMPD=$(which.exe snmpd)
          fi
          $SNMPD -C -c python_tests/snmpd.conf -r -Le $mibdir -m ALL

      - name: Configure, Build, and Run C++ Tests
        uses: carlkidcrypto/os-specific-runner@v2.1.2
        with:
          linux: |
            cd cpp_tests
            meson setup build
            ninja -C build
            meson test -C build --print-errorlogs --test-args="--junit=cpp-test-results_${{ matrix.os }}.xml" || true
          macos: |
            cd cpp_tests
            meson setup build
            ninja -C build
            meson test -C build --print-errorlogs --test-args="--junit=cpp-test-results_${{ matrix.os }}.xml" || true

      - name: Upload Test Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: cpp-test-results_${{matrix.os}}
          path: cpp_tests/cpp-test-results_${{ matrix.os }}.xml

  comment-cpp-test-report:
    runs-on: ubuntu-latest
    needs: build-and-test
    if: always() && github.event_name == 'pull_request'
    steps:
      - name: Download All Test Results
        uses: actions/download-artifact@v4
        with:
          pattern: cpp-test-results_*
          path: test-results
          merge-multiple: true

      - name: Cpp test coverage comment
        uses: MishaKav/pytest-coverage-comment@v1.1.56
        with:
          title: Cpp Test Coverage Report - Native
          unique-id-for-comment: cpp-tests
          hide-badge: true
          hide-report: false
          create-new-comment: false
          hide-comment: false
          multiple-files: |
            macOS, test-results/cpp-test-results_macos-latest.xml
            Ubuntu, test-results/cpp-test-results_ubuntu-latest.xml